generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String   @id @default(uuid())
  name          String
  pregnancyWord String? @unique
  team          String?
  createdAt     DateTime @default(now())
  UserAnswer    UserAnswer[]
  Score         Score[]
}

model Session {
  id                   String         @id @default(uuid())
  phase                Phase          @default(QUIZ)
  currentQuestionIndex Int
  status               SessionStatus  @default(WAITING)
  createdAt            DateTime       @default(now())
  UserAnswer           UserAnswer[]
  Score                Score[]
}

model Score {
  id        String @id @default(uuid())
  userId    String
  user      User    @relation(fields: [userId], references: [id])
  sessionId String
  session   Session @relation(fields: [sessionId], references: [id])
  points    Int
  phase     Phase
}

model Question {
  id           String @id @default(uuid())
  text         String
  options      Json
  correctIndex Int
  timeLimit    Int
  UserAnswer UserAnswer[]
}

model UserAnswer {
  id            String    @id @default(uuid())
  user          User      @relation(fields: [userId], references: [id])
  userId        String
  question      Question  @relation(fields: [questionId], references: [id])
  questionId    String
  session       Session   @relation(fields: [sessionId], references: [id])
  sessionId     String
  selectedIndex Int
  timeTaken     Int
  isCorrect     Boolean
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}
model QrClue {
  id        String   @id @default(uuid())
  token     String   @unique
  clue      String
  points    Int      @default(0)
  used      Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Phase {
  QUIZ
  JOGO
  QR
  FINAL
}

enum SessionStatus {
  WAITING
  IN_PROGRESS
  FINISHED
}

